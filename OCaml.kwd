// OCaml keywords definition file

// Keywords
and
as
assert
asr
begin
class
constraint
do
done
downto
else
end
exception
external
false
for
fun
function
functor
if
in
include
inherit
initializer
land
lazy
let
lor
lsl
lsr
lxor
match
method
mod
module
mutable
new
object
of
open
or
private
rec
sig
struct
then
to
true
try
type
val
virtual
when
while
!=
#
&
&&
'
(
)
*
+
,
-
-.
->
.
..
:
::
:=
:>
;
;;
<
<-
=
>
>]
>}
?
??
[
[<
[>
[|
]
_
`
{
{<
|
|]
}
~
parser
<<
<:
>>
$
$$
$:

// OCaml keywords definition file

// Exceptions
raise
invalid_arg
failwith
Exit

// Comparisons
(=)
(<>)
(<)
(>)
(<=)
(>=)
compare
min
max
(==)
(!=)

// Boolean operations
not
(&&)
(&)
(||)
(or)

// Integer arithmetic
(~-)
(~+)
succ
pred
(+)
(-)
( * )
(/)
(mod)
abs
max_int
min_int

// Bitwise operations
(land)
(lor)
(lxor)
lnot
(lsl)
(lsr)
(asr)

// Floating-point arithmetic
(~-.)
(~+.)
(+.)
(-.)
( *. )
(/.)
( ** )
sqrt
exp
log
log10
expm1
log1p
cos
sin
tan
acos
asin
atan
atan2
cosh
sinh
tanh
ceil
floor
abs_float
mod_float
frexp
ldexp
modf
float
float_of_int
truncate
int_of_float
infinity
neg_infinity
nan
max_float
min_float
epsilon_float
classify_float

// String operations
(^)

// Character operations
int_of_char
char_of_int

// Unit operations
ignore

// String conversion functions
string_of_bool
bool_of_string
string_of_int
int_of_string
string_of_float
float_of_string

// Pair operations
fst
snd

// List operations
(@)

// Input/output
stdin
stdout
stderr

// Output functions on standard output
print_char
print_string
print_int
print_float
print_endline
print_newline

// Output functions on standard error
prerr_char
prerr_string
prerr_int
prerr_float
prerr_endline
prerr_newline

// Input functions on standard input
read_line
read_int
read_float

// General output functions
open_out
open_out_bin
open_out_gen
flush
flush_all
output_char
output_string
output
output_byte
output_binary_int
output_value
seek_out
pos_out
out_channel_length
close_out
close_out_noerr
set_binary_mode_out

// General input functions
open_in
open_in_bin
open_in_gen
input_char
input_line
input
really_input
input_byte
input_binary_int
input_value
seek_in
pos_in
in_channel_length
close_in
close_in_noerr
set_binary_mode_in

// References
ref
(!)
(:=)
incr
decr

// Operations on format strings
string_of_format
format_of_string
(^^)

// Program termination
exit
at_exit
